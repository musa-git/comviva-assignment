1) Typeahead suggestions enable users to search for known and frequently searched terms. As the user types into the search box, it tries to predict the query based on the characters the user has entered and gives a list of suggestions to complete the query. Typeahead suggestions help the user to articulate their search queries better. It’s not about speeding up the search process but rather about guiding the users and lending them a helping hand in constructing their search query. What data structure would be used for the same and how?

Solution :-
The solution is implemented with Trie data structure. Where it will form the trie nodes graph, each trie node contains the character, map of <Charater,Trie> as children and isEndOfWord.
Each trie node can have maximum 26 child nodes('a' to 'z)'.

folder src/trie has below methods.
1) insert :-For each character of word , it will create trie node. Each trie node either map to the root or children path as we process.
When word is complete will set flag isEndOfWord to true.

2) search : This method iterate on the input prefix and find the last node from root using last character of prefix. From this last node will trace all the children path, when we find the isEndOfWord flag true, will add word and frequency into list.

3) topSuggestions :- this method sort list of suggestions based on frequency(no of times user has searched) in decreasing order.


